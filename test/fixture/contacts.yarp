package org.example.contacts;

# Contact represent a single person in the address list.
message Contact {
    @optional id int64         = 0;
    name string                = 1;
    surname string             = 2;
    @optional company Company  = 3;
    @repeated emails string    = 4;
}

# Company represents a company in which a person
# works at.
message Company {
    name string = 0;
    website_address string = 1;
}

# GetContactRequest represents a request to obtain
# a specific contact through a given id.
message GetContactRequest {
    id int64 = 0;
}

# GetContactResposne represents the result of a GetContactRequest.
# An absent `contact` indicates that no contact under the provided id exists.
message GetContactResponse {
    @optional contact Contact = 0;
}

service ContactsService {
    # upsert_contact creates or updates a given contact.
    upsert_contact(Contact);

    # list_contacts returns a stream of all known contacts.
    list_contacts() -> stream Contact;

    # get_contact obtains a single Contact by its ID.
    # Also see: GetContactRequest.
    get_contact(GetContactRequest) -> GetContactResponse;
}
